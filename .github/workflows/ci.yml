name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt -- --check
      - run: cargo clippy -- -D warnings

  test-linux:
    name: Test (Linux + Redis)
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        rust: ['1.82', 'stable']
        redis-mode: ['standalone', 'cluster']

    services:
      redis:
        image: redis:alpine
        ports: [6379:6379]
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@v2

      - name: Setup Redis Cluster
        if: matrix.redis-mode == 'cluster'
        run: |
          sudo apt-get update && sudo apt-get install -y redis-server redis-tools
          mkdir -p /tmp/redis-cluster/{7000,7001,7002,7003,7004,7005}
          
          # Create cluster nodes
          for port in 7000 7001 7002 7003 7004 7005; do
            cat > /tmp/redis-cluster/$port/redis.conf <<EOF
          port $port
          cluster-enabled yes
          cluster-config-file nodes-$port.conf
          cluster-node-timeout 5000
          appendonly yes
          bind 0.0.0.0
          protected-mode no
          EOF
            redis-server /tmp/redis-cluster/$port/redis.conf --daemonize yes --dir /tmp/redis-cluster/$port/
          done
          
          sleep 10
          echo "yes" | redis-cli --cluster create 127.0.0.1:{7000,7001,7002,7003,7004,7005} --cluster-replicas 1

      - name: Build and Test
        run: |
          cargo build --all-features
          cargo test --lib
          
      - name: Run Integration Tests
        env:
          REDIS_AVAILABLE: ${{ matrix.redis-mode == 'standalone' }}
          REDIS_URL: redis://127.0.0.1:6379
          REDIS_CLUSTER_AVAILABLE: ${{ matrix.redis-mode == 'cluster' }}
          # ⚠️ CRITICAL: Redis Cluster PubSub messages DO NOT propagate between nodes
          # All watcher instances MUST use the SAME node for pub/sub to work
          REDIS_CLUSTER_PUBSUB_NODE: redis://127.0.0.1:7000
          RUST_LOG: debug
        run: |
          if [ "${{ matrix.redis-mode }}" = "standalone" ]; then
            cargo test --lib -- --include-ignored
          elif [ "${{ matrix.redis-mode }}" = "cluster" ]; then
            echo "╔════════════════════════════════════════════════════════════════╗"
            echo "║  Redis Cluster PubSub Configuration                           ║"
            echo "╠════════════════════════════════════════════════════════════════╣"
            echo "║  PubSub Node: $REDIS_CLUSTER_PUBSUB_NODE                      ║"
            echo "║  ⚠️  All instances MUST use the SAME node for PubSub!         ║"
            echo "╚════════════════════════════════════════════════════════════════╝"
            echo "Checking cluster status..."
            redis-cli -p 7000 cluster nodes || echo "Warning: Could not get cluster status"
            echo "Running cluster test..."
            timeout 300s cargo test test_redis_cluster_pubsub_notification -- --ignored --nocapture
          fi

      - name: Security Audit
        if: matrix.rust == 'stable'
        run: |
          cargo install cargo-audit
          cargo audit

  test-cross-platform:
    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        rust: ['1.82', 'stable']

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@v2
      - run: cargo build --all-features
      - run: cargo test --lib
