name: Release

on:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-release-
            ${{ runner.os }}-cargo-

      - name: Build release binary
        run: cargo build --release --all-features

      - name: Run tests
        run: cargo test --release --all-features

      - name: Cargo Login
        if: github.repository == 'casbin-rs/redis-watcher'
        run: cargo login ${{ secrets.CARGO_TOKEN }}

      - name: Cargo Publish
        if: github.repository == 'casbin-rs/redis-watcher'
        run: cargo publish --allow-dirty

      - name: Extract release notes
        id: extract-release-notes
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Try to extract release notes from CHANGELOG.md if it exists
          if [ -f CHANGELOG.md ]; then
            # Simple extraction - you might want to improve this
            sed -n "/## \[$VERSION\]/,/## \[/p" CHANGELOG.md | sed '$d' > release_notes.md
          else
            echo "Release $VERSION" > release_notes.md
          fi

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.extract-release-notes.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: false
