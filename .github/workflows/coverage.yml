name: Code Coverage

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

jobs:
  coverage:
    name: Generate Coverage Report
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-coverage-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-coverage-
            ${{ runner.os }}-cargo-

      - name: Install redis-tools for cluster setup
        run: |
          sudo apt-get update
          sudo apt-get install -y redis-tools

      - name: Setup Redis Cluster
        run: |
          # Create Redis cluster configuration
          mkdir -p /tmp/redis-cluster
          for port in 7000 7001 7002 7003 7004 7005; do
            mkdir -p /tmp/redis-cluster/$port
            cat > /tmp/redis-cluster/$port/redis.conf << EOF
          port $port
          cluster-enabled yes
          cluster-config-file nodes-$port.conf
          cluster-node-timeout 5000
          appendonly yes
          bind 0.0.0.0
          protected-mode no
          EOF
          done
          
          # Start Redis cluster nodes
          for port in 7000 7001 7002 7003 7004 7005; do
            redis-server /tmp/redis-cluster/$port/redis.conf --daemonize yes --dir /tmp/redis-cluster/$port/
          done
          
          # Wait for nodes to start
          sleep 10
          
          # Create cluster
          echo "yes" | redis-cli --cluster create \
            127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 \
            127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005 \
            --cluster-replicas 1

      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov

      - name: Generate coverage report with all tests
        run: |
          # Set environment variables for Redis services
          export REDIS_AVAILABLE=true
          export REDIS_URL=redis://127.0.0.1:6379
          export REDIS_CLUSTER_AVAILABLE=true
          export REDIS_CLUSTER_URLS=127.0.0.1:7000,127.0.0.1:7001,127.0.0.1:7002
          
          # Generate coverage including integration tests
          cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: lcov.info
          fail_ci_if_error: false
          verbose: true
